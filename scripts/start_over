#!/usr/bin/perl -w

use strict;
use lib "$ENV{OSCAR_HOME}/lib";
use lib "../lib"; 
use Carp;

# all the rpms we KNOW we installed

my @rpms = qw(
              apache-1.3.22-6
              autoupdate
              autoupdate-cfg-redhat
              autoupdate-oscar
              c3-profiled
              c3
	      hdf5-oscar
	      hdf5-oscar-module
              lam-module
              lam
              loghost
      	      mpich-oscar-module
              mpich-oscar
              ntpconfig
              pvm-modules
              pvm
              openpbs-oscar 
              openpbs-oscar-mom
              openpbs-oscar-server
              openpbs-oscar-gui
              openpbs-oscar-commands
              openpbs-oscar-client
              sync_users-oscar
              ssh-oscar
              maui-oscar
              libdbdcsv-perl
              libappconfig-perl
              rrdtool
              systeminstaller
              systeminstaller-x11
              systemconfigurator
              systemimager-server
              systemimager-common
              systemimager-client
              systemimager-i386boot
              systemimager-ia64boot
              tftp-hpa
              ganglia-monitor-core
              ganglia-php-rrd-client
              env-switcher
      	      modules
             );

stop_services();

# Delete the clients first so /etc/hosts gets cleaned
print "/usr/bin/mksimachine --Delete --all\n";
system("/usr/bin/mksimachine --Delete --all");

uninstall_rpms(@rpms);

delete_from_pool(@rpms);

cleanup_files();

delete_oscar_users();

print "
##########################################################################
The OSCAR installation process modifies the environment of both the
shell that it was installed from as well as any shells that were started
after the OSCAR installer was invoked.  

This script does not attempt to clean the environment of this shell.
It is not possible for this script to clean the environment of any
other currently running shells.

It is therefore **HIGHLY** recomended that you logout and log back in
before attempting most actions (including re-installing OSCAR).
##########################################################################
";

sub delete_oscar_users {
    my @oscar_users = qw(
                   oscartst
                  );
    foreach my $oscar_user (@oscar_users) {
        print "Removing user $oscar_user\n";
        system("userdel -r $oscar_user");
    }
}


sub stop_services {
    my @services = qw(
                      systemimager
                      dhcpd
                      pbs_server
                      maui
                      gmond
                      httpd
                      ntpd
                     );
    foreach my $service (@services) {
        print "service $service stop\n";
        system("service $service stop");
    }
}

sub cleanup_files {
    my @dirs = qw(
            	  /etc/systemimager
                  /etc/dhcpd.conf
                  /etc/profile.d/mpi-00mpich.csh
                  /etc/profile.d/mpi-00mpich.sh
                  /etc/profile.d/mpi-01lam.csh
                  /etc/profile.d/mpi-01lam.sh
                  /etc/systeminstaller
                  /opt/autoupdate
                  /opt/env-switcher*
		  /opt/kernel_picker
                  /opt/lam*
                  /opt/maui
                  /opt/modules
                  /opt/mpich*
		  /opt/opium
                  /opt/pbs
                  /opt/rrdtool-1.0.35
                  /usr/local/lib/systemimager
                  /var/lib/clamdr
                  /var/lib/systemimager
                  /var/lib/systeminstaller
                  /var/log/systemimager
                  /var/spool/pbs
                 );
    foreach my $file (@dirs) {
    	print "rm -rf $file \n";
      system("rm -rf $file");
    }
}


sub delete_from_pool {
    my @rpms = @_;
    my $dir = "/tftpboot/rpm/";
    
    foreach my $rpm (@rpms) {
        print "rm -f $dir$rpm*\n";
        system("rm -f $dir$rpm*");
    }
}

sub uninstall_rpms {
    my @rpms = @_;
    my @deleteme = ();
    foreach my $rpm (@rpms) {
        if(_is_installed($rpm)) {
            push @deleteme, $rpm;
        }
    }
    if(scalar(@deleteme)) {
        my $rpmcmd = 'rpm -e --allmatches --nodeps ' . (join ' ', @deleteme);
	print "$rpmcmd\n";
        if ( system($rpmcmd) ) {
	    print "couldn't uninstall the rpms, trying again with --noscripts\n";
	    @deleteme = ();
	    foreach my $rpm (@rpms) {
		if(_is_installed($rpm)) {
		    push @deleteme, $rpm;
		}
		my $rpmcmd = 'rpm -e --allmatches --nodeps --noscripts ' . (join ' ', @deleteme);
		print "$rpmcmd\n";
		!system($rpmcmd) or croak "couldn't uninstall the rpms";
	    }
	}
    }
   return 1;
}

sub _is_installed {
    my $rpm = shift;
    return !system("rpm -q $rpm");
}
