#!/usr/bin/env perl
#
# Copyright (c) Erich Focht <efocht@hpce.nec.com>
#               All rights reserved
#
# This file is part of the OSCAR software package.  For license
# information, see the COPYING file in the top level directory of the
# OSCAR source distribution.
#
# $Id$

use strict;
use Getopt::Long;
use lib "$ENV{OSCAR_HOME}/lib";
use OSCAR::PackagePath;
use File::Basename;
use Carp;


my ($all, $verbose, $target, @include, $addonly);
GetOptions(
           "verbose"     => \$verbose,
           "target|t=s"  => \$target,
           "include|i=s" => \@include,
           "add"    => \$addonly,
           ) || &usage(1);

my $ohome = $ENV{OSCAR_HOME};
if (!$ohome || ! -d "$ohome") {
    croak("Environment variable \$OSCAR_HOME is not set or wrong!\n");
}

# --all option not yet implemented
#
#if ($all) {
#    opendir DIR, "$ohome/packages/sis/distro" 
#	or croak("Could not open directory $ohome/packages/sis/distro");
# ...


my %pools = &OSCAR::PackagePath::list_distro_pools();
print "Available Distro Pools:\n".Dumper(%pools) if ($verbose);

my %oscar_pools;

if (@include) {
    @include = map { "-i $_" } @include;
}

for my $distro (keys(%pools)) {
    my $os = $pools{$distro}{os};
    my @oscar_repos = split(",",$pools{$distro}{oscar_repo});
    for my $or (@oscar_repos) {
	# skip if this comes from an .url config file
	next if ($or !~ /^\//);

	my $base = basename($or);
	# skip if we already prepared it
	next if (exists($oscar_pools{$base}));
	my $dir = dirname($or);
	# pass and override --target argument, if it exists
	if ($target) {
	    $dir = $target;
	}
	my $cmd = "$ohome/scripts/build_oscar_repo -d $base -t $dir";
	$cmd .= " ".join(" ",@include) if (@include);
	$cmd .= " --add" if ($addonly);

	print "Executing: $cmd" if $verbose;
	!system($cmd) or carp("Error occured while executing: $cmd");
	$oscar_pools{$base} = 1;
    }
}


sub usage {
    my $ret = shift;
    print "Usage:\n";
    print "\t$0 [--all]\n\n";
    exit $ret if ($ret);
}
