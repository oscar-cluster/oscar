#!/usr/bin/env perl 
#
# Copyright (c) 2007-2008 Oak Ridge National Laboratory
#                         Geoffroy Vallee <valleegr@ornl.gov>
#                         All rights reserved
#
# This file is part of the OSCAR software package.  For license
# information, see the COPYING file in the top level directory of the
# OSCAR source distribution.
#
# This script is a simple CLI for the management of OSCAR clusters.
#
# $Id$
#

use strict;
use warnings "all";
use Carp;
use lib "$ENV{OSCAR_HOME}/lib";
use OSCAR::msm;
use OSCAR::PartitionMgt;
use OSCAR::Database;
use OSCAR::Network;
use Getopt::Long;

# Few needed variables.
my ($new_partition, @clients, $list_partitions, $list_partition_nodes, 
    $distro, $list_partition_distro, $cluster_name);
my $verbose = 1;

Getopt::Long::Configure("pass_through");
GetOptions(
        "display-partitions"            => \$list_partitions,
        "display-partition-nodes=s"     => \$list_partition_nodes,
        "display-partition-distro=s"    => \$list_partition_distro,
        "add-partition=s"               => \$new_partition,
        "cluster=s"                     => \$cluster_name,
        "client=s"                      => \@clients,
        "distro=s"                      => \$distro,
        "help"                          => \&help,
        ) || help_and_exit();

# We get the configuration from the OSCAR configuration file.
my $oscar_configurator = OSCAR::ConfigManager->new();
if ( ! defined ($oscar_configurator) ) {
    die "ERROR: Impossible to get the OSCAR configuration\n";
}
my $config = $oscar_configurator->get_config();
die "ERROR: ODA is based on a real database and currently this script does ".
    "not support this mode, it supports only a file based ODA database. ".
    "Please upodate your OSCAR configuration file and re-initialize OSCAR ".
    "if you want to use this script" if ($config->{db_type} ne "file"); 

# The user wants to add a new partition
if ($new_partition) {
    # In order to add a partition, a cluster has to be specified.
    if (!defined($cluster_name)) {
        die "ERROR: no cluster is specified, impossible to create a new ".
            "partition";
    }
    # If the user did not define clients at the same time, this is an error.
    if (scalar(@clients) == 0) {
        die ("ERROR: no client is associated to the partition, ".
              "impossible to create the partition.\n");
    }
    # The user also need to spoecify a cluster.
    if (!defined($distro) || $distro eq "") {
        die ("ERROR: no linux distribution is associated to the partition. ".
              "To know which distributions are supported, please use ".
              "the oscar-config command\n");
    }
    print "New partition: name=$new_partition, ".
          "distro=$distro, clients=@clients\n" if $verbose;
    OSCAR::msm::add_partition ($cluster_name, 
                               $new_partition, 
                               $distro,
                               \@clients);
}

# The user wants to see the list of partitions.
if ($list_partitions) {
    my @partitions = OSCAR::PartitionMgt::get_list_partitions ("oscar");
    foreach my $p (@partitions) {
        if (defined ($p)) {
            print "$p ";
        }
    }
    print "\n";
}

# The user wants to see the list of nodes within a partition.
if ($list_partition_nodes) {
# Currently we only support a single cluster so the following code is
# deactivated.
    # In order to list partition's nodes, a cluster has to be specified.
#    if (!defined($cluster_name)) {
#        die "ERROR: no cluster is specified, impossible to create a new ".
#            "partition";
#    }
    my @nodes =
        OSCAR::PartitionMgt::get_list_nodes_partition ("oscar",
                                                       $list_partition_nodes);
    die "ERROR: impossible to get nodes information" if (!@nodes);
    foreach my $n (@nodes) {
        print "$n ";
    }
    print "\n";
}

# The user wants to see the Linux distribution id associated to a give 
# partition.
if ($list_partition_distro) {
    my $distro = 
        OSCAR::PartitionMgt::get_partition_distro ($list_partition_distro);
    if (defined($distro)) {
        print "$distro";
        print "\n";
    }
}

sub help () {
    print "Not yet implemented\n";
}

sub help_and_exit {
    help ();
    exit 1;
}

1;


__END__

=head1 NAME

oscar, a command line tool for the management of OSCAR clusters.

=head1 SYNOPSIS

oscar OPTIONS

=head1 DESCRIPTION

oscar is a command line tool for the management of OSCAR cluster. It allows
users to define and deploy clusters and cluster partitions.

=head1 SYNTAX

oscar [options]

=head1 OPTIONS

Recognized options include:

=over 12

=item --display-partitions

=item --display-partition-nodes

=item --display-partition-distro

=item --add-partition

=item --cluster

=item --client

=item --distro

=item --help

This help information.

=back

=head1 Examples

To add a partition "partition1" to the cluster "oscar with two nodes, "node1" 
and "node2", based on debian 4 x86_64:
    oscar --add-partition partition1 --cluster oscar --client node1 --client \
    node2 --distro debian-4-x86_64

=head1 AUTHOR

Geoffroy Vallee, Oak Ridge National Laboratory <valleegr@ornl.gov>

=head1 SEE ALSO

perl(1)

=cut
