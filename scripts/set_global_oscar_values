#! /usr/bin/perl

# Copyright 2003 NCSA
#           Neil Gorsuch <ngorsuch@ncsa.uiuc.edu>
# Copyright 2004 Revolution Linux
#           Benoit des Ligneris <bdesligneris@revolutionlinux.com>
# Copyright 2005 Canada's Michael Smith Genome Sciences Centre
#	    Bernard Li <bli@bcgsc.ca>
# Copyright (c) 2005 The Trustees of Indiana University.  
#                    All rights reserved.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
 
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
 
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#   This script initializes or re-initializes the values in the database
#   table "oscar" which is for global values.

# $Id$

use Getopt::Long;
use strict;
use lib "$ENV{OSCAR_HOME}/lib";
use OSCAR::Database;
use OSCAR::Package;
use OSCAR::Distro;
use POSIX;
use OSCAR::oda;

my %options = ();

# set default option values
my %options = ( 'debug'       => 0,
                'verbose'     => 0 );

my %field_value_hash = ();
# parse command line options
GetOptions( \%options,
            'debug!',
            'database|d=s',
            'help',
            'host|h=s',
            'password=s',
            'port|p=i',
            'type|t=s',
            'user|u=s',
            'verbose!',
            'version' )
    || usage(1);
print "$0: after GetOptions ARGV=<@ARGV>\n" if $options{debug};
oda::print_hash( "", "$0: options after GetOptions", \%options) if $options{debug};

my ($oscar_server_distribution,$oscar_server_distribution_version) = which_distro_server();
my $mysql_service_name = which_mysql_name($oscar_server_distribution,$oscar_server_distribution_version);

my $oscar_server_architecture;
my $uname_data = (uname)[4];
if ( $uname_data eq "i386" ) {
    $oscar_server_architecture = "ia32";
} elsif ( $uname_data eq "i586" ) {
    $oscar_server_architecture = "ia32";
} elsif ( $uname_data eq "i686" ) {
    $oscar_server_architecture = "ia32";
} elsif ( $uname_data eq "ia64" ) {
    $oscar_server_architecture = "ia64";
} elsif ( $uname_data eq "x86_64" ) {
    $oscar_server_architecture = "x86_64";
} else {
    my $oscar_server_architecture = "Unknown";
    warn "$0: Cannot determine architecture of oscar server machine";
}

# open the database
#database_connect() ||
#die "$0: cannot connect to oda database";
# START LOCKING FOR NEST && open the database
my @tables = ("Clusters", "Groups", "Status");
my %options = ();
my @errors = ();
if(! locking("write", \%options, \@tables, \@errors)){
    die "$0: cannot connect to oda database";
}


# write out one global oscar record, or modify an existing one
my @assigns = ();
my $oscar_version;
if ( -r "$ENV{OSCAR_HOME}/VERSION" ) {
    $oscar_version = `cat $ENV{OSCAR_HOME}/VERSION`;
    chomp $oscar_version;
} else {
    $oscar_version = "CVS";
}

my $global_values_table = "Clusters";

my @error_strings = ();

my $query_results = get_cluster_info_with_name("",\%options,\@error_strings);
if ( !$query_results ){
    %field_value_hash = ( "name" => "oscar",
                            "oscar_version" => $oscar_version,
                            "server_distribution" => $oscar_server_distribution,
                            "server_distribution_version" => $oscar_server_distribution_version,
                            "server_architecture" => $oscar_server_architecture,
                            "installation_date" => "NOW()" );
    insert_into_table (\%options,"Clusters", \%field_value_hash,\@error_strings);                
} else {
	print "$0: very strange, there are more than 1 records table <$global_values_table>\n"
	    if (ref($query_results) ne "HASH") && (scalar @$query_results > 1) ;
	print "Modifying the global oscar information record\n";
    %field_value_hash = ("oscar_version" => $oscar_version,
                            "server_distribution" => $oscar_server_distribution,
                            "server_distribution_version" => $oscar_server_distribution_version,
                            "server_architecture" => $oscar_server_architecture,
                            "installation_date" => "NOW()" );
    update_table(\%options,"Clusters", \%field_value_hash,undef,\@error_strings);                        
}

# Set up "Group" table with the global values.
# The current group values are..
my @groups = ("oscar_server", "oscar_clients", "Default", "image", "core", "included");
set_all_groups(\@groups,\%options,@error_strings);

# Set up "Status" table with the global values.
# The current status values are..
# ("installable", "installed", "install_allowed","should_be_installed", "should_be_uninstalled")
set_status(\%options,\@error_strings);

# UNLOCKING FOR NEST
unlock(\%options, \@errors);

exit 0;
