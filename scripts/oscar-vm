#!/usr/bin/env perl
#

#
# Copyright (c) 2007-2008 Oak Ridge National Laboratory.
#                         Geoffroy R. Vallee <valleegr@ornl.gov>
#                         All rights reserved.
#
# This file is part of the OSCAR software package.  For license
# information, see the COPYING file in the top level directory of the
# OSCAR source distribution.
#

#
# $Id: oscar-config 7238 2008-08-06 20:22:33Z valleegr $
#

use strict;
use Cwd qw(chdir cwd);
use Getopt::Long;
use OSCAR::Utils;
use OSCAR::Logger;
use warnings "all";

BEGIN {
    if (defined $ENV{OSCAR_HOME}) {
        unshift @INC, "$ENV{OSCAR_HOME}/lib";
    }
}

my ($add, $remove, $update, $mac, $distro);

GetOptions(
        "add=s"                         => \$add,
        "remove"                        => \$remove,
        "update"                        => \$update,
        "mac=s"                         => \$mac,
        "distro=s"                      => \$distro,
        "help"                          => \&help,
        ) || help_and_exit();

my $actions = 0;
$actions++ if (defined $add);
$actions++ if (defined $remove);
$actions++ if (defined $update);
if ($actions != 1) {
    die "ERROR: Invalid number of actions ($actions)";
}

if (defined $add && (!is_a_valid_string ($mac) 
                     || !is_a_valid_string ($distro))) {
    die "ERROR: Invalid argument for the addition of a new VM";
}

if (defined $update && (!is_a_valid_string ($mac) 
                     || !is_a_valid_string ($distro))) {
    die "ERROR: Invalid argument for the addition of a new VM";
}

if (defined $remove && !is_a_valid_string ($remove)) {
    die "ERROR: Invalid VM name";
}

if ($add) {
    OSCAR::Logger::oscar_log_section ("Adding a new VM ($add)");
    require OSCAR::ImageMgt;
    my %vars = OSCAR::ImageMgt::get_image_default_settings ();
    if (OSCAR::ImageMgt::create_image ($add, %vars)) {
        die "ERROR: Impossible to create the image for $distro";
    }
}

if ($remove) {
    OSCAR::Logger::oscar_log_section ("Removing a VM ($remove)");
}

if ($update) {
    OSCAR::Logger::oscar_log_section ("Updating a VM ($update)");
}

exit 0;

sub help {
    print "Usage: $0 OPTION\n";
    print "\n";
    print "Setup virtual machines via OSCAR.\n";
    print "OPTION can be:\n";
    print "    add <VM_ID>:         Add a new virtual machine.\n";
    print "    remove <VM_ID>:      Remove a virtual machine.\n";
    print "    update <VM_ID>:      Update a virtual machine.\n";
    print "    mac <MAC_ADDRESS>:   Sepcify a MAC address (must be used when adding a virutal machine)\n";
    print "    distro <DISTRO_ID>:  Linux distribution used for the VM (must be used when adding a virutal machine)\n";
    print "    help:                Display this help\n";
    print "\n";
}

sub help_and_exit {
    help ();
    exit 1;
}

__END__
