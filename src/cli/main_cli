#!/usr/bin/perl -w

# $Id $
#
# Copyright (c) 2006 Oak Ridge National Laboratory.
#                  All rights reserved.
#
# This is the main script for the Command Line Installer
# The CLI mirrors the GUI installer by using the same steps only in
# a more scriptable command line version.  This script should not do
# any installation on its own, but should call other scripts to run
# each step.  Doing this will keep the installation process much more
# modular and easier to maintain.
#
# To start the installation process, type the name of this script and
# the network interface to use for OSCAR.
#
# By adding additional flags, this script can be automated:
#
# -selector <filename> : Passes the filename to the selector script
# -build <filename> : Passes the filename to the build script

use strict;
use lib "$ENV{OSCAR_HOME}/lib";
use OSCAR::Logger;

$| = 1;

if ($#ARGV < 0 || $ARGV[0] =~ /^-/)
{
	print "Usage: main_cli interface [FLAGS]
Flags (Provide automation):
	-selector <filename> : Passes the filename to the selector script
	-build <filename> : Passes the filename to the build script\n";
	exit 1;
}

my $selectorfile = " ";
my $buildfile = " ";
for(my $i = 1; $i <= $#ARGV; $i++)
{
	if($ARGV[$i] eq "-selector") {$selectorfile = $ARGV[++$i];}
	elsif($ARGV[$i] eq "-build") {$buildfile = $ARGV[++$i];}
}

oscar_log_section("Running OSCAR CLI Installer");

#Step 0 should be taken care of with the opd command line utility

#Step 1 - Select Packages
system("./selector_cli $selectorfile");

#Step 2 - Configure Packages
#system("./configurator_cli");

#Step 3 - Install Packages
oscar_log_section("Installing Packages");
if(!system("$ENV{OSCAR_HOME}/scripts/install_server $ARGV[0]"))
{
	oscar_log_section("Packages Successfully Installed");
}
else
{
	oscar_log_section("Packages not Installed!");
	exit 1;
}

#Step 4 - Build OSCAR Client Image
system("./build_oscar_image_cli $ARGV[0] $buildfile");
