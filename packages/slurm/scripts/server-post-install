#!/usr/bin/perl
#
# Copyright (c) 2013 CEA Commissariat A l'Energie Atomique
#                    All rights reserved.
#
# Previous deprecated version written in bash is
# Copyright (c) 2004 The Trustees of Indiana University.  
#                    All rights reserved.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# This scripts configure the slurm batch system on the head node
#
# $Id: server-post-install 11034 2015-08-04 11:08:16Z olahaye74 $
#

use Carp;
use OSCAR::Opkg;
use OSCAR::Utils;
use OSCAR::FileUtils;
use OSCAR::SystemServices;
use OSCAR::SystemServicesDefs;
use feature "switch";
# Avoid smartmatch warnings when using given
no if $] >= 5.017011, warnings => 'experimental::smartmatch';

# Enable the slurm service
!enable_system_services( SLURM )
    or (carp "ERROR: Couldn't enable slurm service.", exit(-1));

#Â Get RM_Detect full path.
my $rm_detect_dir;
if (defined $ENV{OSCAR_HOME}) {
    $rm_detect_dir = "$ENV{OSCAR_HOME}/lib/";
} else {
    require OSCAR::Utils;
    $rm_detect_dir = OSCAR::Utils::get_path_perl_modules ();
}
$rm_detect_dir .= "/OSCAR/OCA/RM_Detect";

# Copy RM_Detect component for SLURM to the right location
my $rm_file = "/usr/lib/oscar/packages/slurm/SLURM.pm";
oscar_system("cp -a $rm_file $rm_detect_dir") == 0
    or ($rc++, oscar_log(5, ERROR, "Failed to copy $rm_file to $rm_detect_dir"), exit 1);

# Succeffully configured slurm.
print "[INFO] slurm: successfully enabled batch queuing system on the head node\n";

exit 0;

