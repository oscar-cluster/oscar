#!/usr/bin/env perl

# Copyright (C) 2014 Olivier Lahaye <olivier.lahaye@cea.fr>
#                    All rights reserved

# Post install action to start naemon service. We can't start it before
# otherwize, non yet deployed nodes would trigger some alarms.

use Carp;
# use OSCAR::Opkg;
use OSCAR::SystemServices;
use OSCAR::SystemServicesDefs;
use OSCAR::Logger;
use OSCAR::LoggerDefs;
# use OSCAR::Package;
use SIS::NewDB;
use OSCAR::MonitoringMgt;
use OSCAR::Opkg;

oscar_log(2, INFO,"Creating Oscar hostgroup");

# Get the images with associated nodes.
my %sis_nodes;
for my $client (SIS::NewDB::list_client()) {
    push @{$sis_nodes{$client->{imagename}}}, $client->{name}
}

# Write usefull hostgroups.
write_oscar_hostgroup_cfg('switches', 'OSCAR Switches', undef, undef); # For end user ease.

my @hostgroups = ( 'switches' ); # Empty group for ease of use.

# For each image, create the correspondig hostgroup
for my $img (keys(%sis_nodes)) {
    write_oscar_hostgroup_cfg("${img}_nodes", "${img} Nodes", \@{$sis_nodes{$img}}, undef);
    push (@hostgroups, "${img}_nodes");
}

# Create the oscar_cluster hostgroup that regroups all nodes and switches that we can ping and ssh to.
my @oscar_cluster_members = ( 'localhost' ); # head.
write_oscar_hostgroup_cfg('oscar_cluster', 'OSCAR Cluster', \@oscar_cluster_members, \@hostgroups);


opkg_print("starting httpd service on head-node\n");
!system_service(HTTP,START)
    or croak "ERROR: Couldn't start naemon service on head-node.";
opkg_print("starting naemon service on head-node\n");
!system_service(NAEMON,START)
    or croak "ERROR: Couldn't start naemon service on head-node.";
opkg_print("starting thruk service on head-node\n");
!system_service(THRUK,START)
    or croak "ERROR: Couldn't start naemon service on head-node.";

exit 0;
