#!/usr/bin/perl
# (C)opyright Paul Greidanus <paul.greidanus@ualberta.ca>

use strict;
use lib "$ENV{OSCAR_HOME}/lib";
#use POSIX; # gives us uname function
#use File::Path;
#use File::Copy;
#use File::Basename;
use OSCAR::Configurator_backend;
use Carp;
use OSCAR::Env qw ( oscar_home_env);
use Getopt::Long;
use Cwd qw(chdir cwd);

printf "Running NFS\n";

# Read in configuration data from ODA
my $xml_data = "$ENV{OSCAR_PACKAGE_HOME}/configurator.html";
my $nfs_data = readInConfigValues($xml_data,"nfs","",noarray=>1);
 # init counters
my $mount_counter = 1;
my $max_counter = $nfs_data->{num_nfs_mounts};

my $imagedir = shift @ARGV;
my $nfs_fstab = $imagedir . "/etc/fstab.nfs";

$imagedir =~ s/\/$//;
my $image = $imagedir;
$image =~ s:^.*/::g;

#create script that will setup fstab and mountpoints
my $script = "/var/lib/systemimager/scripts/post-install/90".$image.".add_nfs";

open ( SCRIPT, "> $script");

open( NFS_FSTAB, "> $nfs_fstab");

printf NFS_FSTAB "# NFS entries created by 90".$image.".add_nfs\n";

print SCRIPT <<'EOF';
#!/bin/sh
#
# Script generated by opkg-nfs: api-post-image
#

# Cleanup default nfs entries from basic OSCAR fstab
sed -i -e '/^.*nfs.*rw.*0.*0$/d' /etc/fstab

# Create mountpoints
EOF

#iterare through available mounts from ODA and setup fstab
while ( $mount_counter <= $max_counter ) {
	my $nfs_server = "";
	$nfs_server = $nfs_data->{"rsrv_" . $mount_counter};

	my $nfs_local = "";
	$nfs_local = $nfs_data->{"lpath_" . $mount_counter};	

	my $nfs_remote = "";
	$nfs_remote = $nfs_data->{"rpath_" . $mount_counter};

    # If entry is not empty, then add line to script and to fstab.nfs
    if ($nfs_local ne "" and $nfs_remote ne "" and $nfs_server ne "") {
	    # Add lines into script to create mountpoint directories if they do not exist
        printf SCRIPT "mkdir -p $nfs_local\n";
        # Add lines to the fstab.nfs related to mountpoint
	    printf NFS_FSTAB "$nfs_server:$nfs_remote\t$nfs_local\tnfs\trw\t0\t0\n";
    }
	$mount_counter++;
	}

printf NFS_FSTAB "# End entries added by 90".$image.".add_nfs\n";
close NFS_FSTAB;

# Once all mkdir are successfull, append fstab.nfs to fstab.
print SCRIPT <<"EOF";

# Update fstab with nfs mount points.
cat /etc/fstab.nfs >> /etc/fstab
EOF

close SCRIPT;
chmod 0755, $script;
1;
