#!/bin/sh

### Job name
#PBS -N mpichtest

### Output files
#PBS -o mpichtest.out
#PBS -e mpichtest.err

### Queue name
#PBS -q workq

### Script Commands
cd $PBS_O_WORKDIR
echo "Running MPICH test"

# The MPICH test iteself

NP=`(wc -l < $PBS_NODEFILE) | awk '{print $1}'`

do_cmds() {
    cat <<EOF

--> $banner

EOF

    eval $cmds
    if test "$?" != "0"; then
	echo "TEST FAILED!"
	echo "Commands: $cmds"
	exit 1
    fi
}

# Create tmp directory to put temporary files

mpich_tmp="/tmp/mpich-test"
if test ! -d $mpich_tmp; then
    rm -rf $mpich_tmp
    mkdir -p $mpich_tmp
fi

p=`pwd`
banner="MPI C bindings test:"
cmds="cp cpi.c $mpich_tmp && cd $mpich_tmp && mpicc cpi.c -o mpich-cpi && cp mpich-cpi $p && cd $p && mpirun -machinefile $PBS_NODEFILE -np $NP ./mpich-cpi"
do_cmds

banner="MPI C++ bindings test:"
cmds="cp cxxhello.cc $mpich_tmp && cd $mpich_tmp && mpiCC cxxhello.cc -o mpich-cxxhello && cp mpich-cxxhello $p && cd $p && mpirun -machinefile $PBS_NODEFILE -np $NP ./mpich-cxxhello"
do_cmds

banner="MPI Fortran bindings test:"
cmds="cp f77hello.f $mpich_tmp && cd $mpich_tmp && mpif77 f77hello.f -o mpich-f77hello && cp mpich-f77hello $p && cd $p && mpirun -machinefile $PBS_NODEFILE -np $NP ./mpich-f77hello"
do_cmds

echo "MPICH test complete"
echo "Unless there are errors above, test completed successfully."

# Cleanup

if test -d $mpich_tmp; then
    rm -rf $mpich_tmp
fi

echo
exit 0
