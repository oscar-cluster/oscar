#!/usr/bin/env perl

# Copyright © 2003, The Board of Trustees of the University of Illinois. All rights reserved.
# Copyright (c) 2005-2007 The Trustees of Indiana University.  
#                    All rights reserved.
# Copyright (c) 2005, Revolution Linux
# Copyright (c) 2006, Erich Focht
#                     All rights reserved
# 
# This file is part of the OSCAR software package.  For license
# information, see the COPYING file in the top level directory of the
# OSCAR source distribution.
#
# $Id: setup 5874 2007-06-07 20:55:58Z dikim $
#

use strict;
use Carp;

use lib "$ENV{OSCAR_HOME}/lib";
use OSCAR::ConfigFile;
use OSCAR::Logger;
use OSCAR::PackagePath;
use File::Copy;
use OSCAR::OCA::OS_Settings;
use OSCAR::SystemServices;
use OSCAR::SystemServicesDefs;

my $binaries_path = OSCAR::ConfigFile::get_value ("/etc/oscar/oscar.conf",
                                                      undef,
                                                     "OSCAR_SCRIPTS_PATH");
my $db_type = OSCAR::ConfigFile::get_value ("/etc/oscar/oscar.conf",
                                                      undef,
                                                     "DB_TYPE");
# NOTE: OL: The above line will get the dbtype but will never get the $chk that we used to have with the line below
#my ($db_type, $chk) = split(':', $ENV{OSCAR_DB});

my $oda_cmd = "$binaries_path/oda";

# We currently force the restart all the time: this script is executed when
# updating the opkg-oda package, it is difficult to know the exact status of
# the system so we just assume this is a new install.
my $chk = "new";

# Default database is MySQL.
my $database = OSCAR::OCA::OS_Settings::getitem(MYSQL());

# Reconfigure PostgreSQL
if ($db_type eq "pgsql"){
    $database = OSCAR::OCA::OS_Settings::getitem(POSTGRESQL());
    my $PG_DATA_DIR = OSCAR::OCA::OS_Settings::getitem("postgresql_datadir");
    my $pg_conf = "$PG_DATA_DIR/pg_hba.conf";
    my $postgresql_conf = "$PG_DATA_DIR/postgresql.conf";
    # OL: Always true......
    if ($chk eq "new"){
        # Start the database daemon if not started yet. OL Q: Should we enable it?
        !system_service(POSTGRESQL(),START())
            or croak("ERROR: Couldn't start postgresql server.");

        # 1st, create a backup of the config file if not already done.
        backup_file_if_not_exist($pg_conf) or die "ERROR: Cannot backup $pg_conf";

        open OLD_CFG, "<$pg_conf"
            or croak("Can not open $pg_conf file");
        open NEW_CFG, ">$pg_conf.$$";
        while(chomp(my $line = <OLD_CFG>)){
            $line =~ s/^local(\s*all\s*all).*/host$1 127.0.0.1 255.255.255.0  trust/g;
            print NEW_CFG "$line\n";
        }
        close NEW_CFG; close OLD_CFG;
        rename "$pg_conf.$$", $pg_conf;

        # 1st, create a backup of the config file if not already done.
        backup_file_if_not_exist($postgresql_conf) or die "ERROR: Cannot backup $postgresql_conf";

        open PG_CFG, "<$postgresql_conf"
            or croak("Can not open $postgresql_conf file");
        open PG_BAK, ">$postgresql_conf.$$";
        while(chomp(my $line = <PG_CFG>)){
            $line =~ s/^#(tcpip_socket).*/$1 = true/g;
            print PG_BAK "$line\n";
        }
        close PG_BAK; close PG_CFG;
        rename "$postgresql_conf.$$", $postgresql_conf;
        system("chmod 600 $pg_conf $postgresql_conf");
        # FIXME: Ol: Check this works on all distros.
        system("chown postgres:postgres $pg_conf $postgresql_conf");
    }
    goto RESTART_DATABASE;
}


# Reconfigure MySQL

# FIXME: OL: mandriva not supported. need to check if code below still needed.
#goto RESTART_DATABASE
#    if($os->{'distro'} eq "mandriva");

# Set up the InnoDB type to the oscar database tables.
# 
# This script needs to run for MySQL 3.28 ( < 4.0 ).
my $mysql_conf = OSCAR::OCA::OS_Settings::getitem(MYSQL()."_datadir");
my $innodb_conf = "innodb_data_file_path=ibdata1:10M:autoextend";
my $innodb_flag = 0;

# Check to see if the my.conf is already setup for InnoDB
open DB_CONF, "$mysql_conf" or die "Can not open $mysql_conf file";
while(my $line = <DB_CONF>){
    chomp($line);
    if( $line =~ m/$innodb_conf/ ){
        print "This mysql has been already setup InnoDB table type\n";
        $innodb_flag = 1;
        last;
    }
}
close DB_CONF;

# If my.cnf is not setup for InnoDB, configure it so
if(! $innodb_flag ){
    # 1st, create a backup of the config file if not already done.
    backup_file_if_not_exist($mysql_conf) or die "ERROR: Cannot backup $mysql_conf";
    open NEW_DB_CONF, ">$mysql_conf.$$"
        or die "Can not create a copy file $mysql_conf.bak";
    open DB_CONF, "$mysql_conf"
        or die "Can not open $mysql_conf file";
    my $flag = 0;
    while(my $line = <DB_CONF>){
        chomp($line);
        $flag = 1 if $line =~ /\[mysqld\]/;
        if ($line =~ /^(\s*)$/ && $flag) {
            $line =~ s/$1/$innodb_conf\n/g;
            $flag = 0;
        }    
        print NEW_DB_CONF "$line\n";
    }
    close DB_CONF;
    close NEW_DB_CONF;

    # COPY NEW_DB_CONF TO THE ORIGINAL
    copy("$mysql_conf.$$", $mysql_conf);
    # REMOVE NEW_DB_CONF
    unlink "$mysql_conf.$$";
}    

 RESTART_DATABASE:

# Reload the database if it is running. Otherwise, just start it.
if ( system_service($database,STATUS()) == STARTED() ) {
    !system_service($database,RESTART())
        or die "ERROR: Couldn't restart $database server.";
    # OL: What does mean "old"?
    $chk = "old";
    $ENV{OSCAR_DB} = "$db_type:$chk";
} else {
    oscar_log_subsection("$database daemon was not running and will start");
    !system_service($database,START())
        or die "ERROR: Couldn't start $database server.";
}

exit(0);
