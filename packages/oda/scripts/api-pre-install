#!/usr/bin/env perl

# Copyright © 2003, The Board of Trustees of the University of Illinois. All rights reserved.
# Copyright (c) 2005-2007 The Trustees of Indiana University.  
#                    All rights reserved.
# Copyright (c) 2005, Revolution Linux
# Copyright (c) 2006, Erich Focht
#                     All rights reserved
# 
# This file is part of the OSCAR software package.  For license
# information, see the COPYING file in the top level directory of the
# OSCAR source distribution.
#
# $Id: setup 5874 2007-06-07 20:55:58Z dikim $
#

use strict;
use Carp;

use lib "$ENV{OSCAR_HOME}/lib";
use OSCAR::Logger;
use OSCAR::PackagePath;
use File::Copy;

my $oda_cmd = "$ENV{OSCAR_HOME}/scripts/oda";
my $oda_link = "/usr/local/bin/oda";

my ($db_type, $chk) = split(':', $ENV{OSCAR_DB});
my $mysqld;
my $pgsqld = "postgresql";
my $database_daemon = $pgsqld if $db_type eq "pgsql";

# Reconfigure PostgreSQL
if ($db_type eq "pgsql"){
    my $PG_DATA_DIR = "/var/lib/pgsql/data";
    my $pg_conf = "$PG_DATA_DIR/pg_hba.conf";
    my $postgresql_conf = "$PG_DATA_DIR/postgresql.conf";
    if ($chk eq "new"){
        if ( !system("/etc/init.d/$database_daemon status | grep -c stopped > /dev/null 2>&1") ) {
          !system("/etc/init.d/$database_daemon start") or croak("Couldn't restart $database_daemon");
        }
        open OLD_CFG, "<$pg_conf"
            or croak("Can not open $pg_conf file");
        open NEW_CFG, ">$pg_conf.$$";
        while(chomp(my $line = <OLD_CFG>)){
            $line =~ s/^local(\s*all\s*all).*/host$1 127.0.0.1 255.255.255.0  trust/g;
            print NEW_CFG "$line\n";
        }
        close NEW_CFG; close OLD_CFG;
        rename $pg_conf, "$pg_conf.bak";
        rename "$pg_conf.$$", $pg_conf;

        open PG_CFG, "<$postgresql_conf"
            or croak("Can not open $postgresql_conf file");
        open PG_BAK, ">$postgresql_conf.$$";
        while(chomp(my $line = <PG_CFG>)){
            $line =~ s/^#(tcpip_socket).*/$1 = true/g;
            print PG_BAK "$line\n";
        }
        close PG_BAK; close PG_CFG;
        rename $postgresql_conf, "$postgresql_conf.bak";
        rename "$postgresql_conf.$$", $postgresql_conf;
        system("chmod 600 $pg_conf $postgresql_conf");
        system("chown postgres:postgres $pg_conf $postgresql_conf");
        

    }

    goto RESTART_DATABASE;
}


# Reconfigure MySQL
my $os = OSCAR::PackagePath::distro_detect_or_die();

if ($os->{compat_distro} =~ /^(rhel|fc|mdv|ydl)/) {
    $mysqld      = 'mysqld';
} elsif ($os->{compat_distro} =~ /^(suse|mdk|debian)/) {
    $mysqld      = 'mysql';
} else {
    print "\n\nCannot determine distribution and version!!!!\nCannot determine oda rpms to install!!!!\n\n";
    exit 1;
}
$database_daemon = $mysqld if $db_type eq "mysql";

# MySQL on Mandriva 2006 should not have the following
# innodb conf on /etc/my.cnf
# So, we skip the innodb.conf when distro is mandriva.
goto RESTART_DATABASE
    if($os->{'distro'} eq "mandriva");

# Set up the InnoDB type to the oscar database tables.
# 
# This script needs to run for MySQL 3.28 ( < 4.0 ).
my $mysql_conf;
if ($os->{compat_distro} =~ /^(debian)/) {
        $mysql_conf = "/etc/mysql/my.cnf";
} else {
        $mysql_conf = "/etc/my.cnf";
}
my $innodb_conf = "innodb_data_file_path=ibdata1:10M:autoextend";
my $innodb_flag = 0;

# Check to see if the my.conf is already setup for InnoDB
open DB_CONF, "$mysql_conf" or die "Can not open $mysql_conf file";
while(my $line = <DB_CONF>){
    chomp($line);
    if( $line =~ m/$innodb_conf/ ){
        print "This mysql has been already setup InnoDB table type\n";
        $innodb_flag = 1;
        last;
    }
}
close DB_CONF;

# If my.cnf is not setup for InnoDB, configure it so
if(! $innodb_flag ){
    open BACKUP, ">$mysql_conf.bak"
        or die "Can not create a copy file $mysql_conf.bak";
    open DB_CONF, "$mysql_conf"
        or die "Can not open $mysql_conf file";
    my $flag = 0;
    while(my $line = <DB_CONF>){
        chomp($line);
        $flag = 1 if $line =~ /\[mysqld\]/;
        if ($line =~ /^(\s*)$/ && $flag) {
            $line =~ s/$1/$innodb_conf\n/g;
            $flag = 0;
        }    
        print BACKUP "$line\n";
    }
    close DB_CONF;
    close BACKUP;

    # COPY BACK TO THE ORIGINAL
    copy("$mysql_conf.bak", $mysql_conf);
    # REMOVE BACKUP
    unlink "$mysql_conf.bak";
}    

 RESTART_DATABASE:

oscar_log_subsection("Checking status of $db_type server $database_daemon");
if (! -x "/etc/init.d/$database_daemon") {
    croak("Couldn't find /etc/init.d/$database_daemon. $db_type server not correctly installed?");
}
# Restart the database if it is running. Otherwise, just start it.
if ( system("/etc/init.d/$database_daemon status | grep -c stopped > /dev/null 2>&1") ){
  !system("/etc/init.d/$database_daemon restart") or croak("Couldn't restart $database_daemon");
  $chk = "old";
  $ENV{OSCAR_DB} = "$db_type:$chk";
} else {
  oscar_log_subsection("$database_daemon was not running and will start");
  !system("/etc/init.d/$database_daemon start") or croak("Couldn't start $database_daemon");
}

# Make a symlink for oda command to make it available on the standard
# PATH
system("ln -s $oda_cmd $oda_link") 
    if ! -e $oda_link;

exit(0);
