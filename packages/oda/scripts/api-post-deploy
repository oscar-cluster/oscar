#!/usr/bin/perl

#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
 
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
 
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# Copyright (c) 2005-2007 The Trustees of Indiana University.  
#                    All rights reserved.

#$Id: post_install 5840 2007-05-02 17:13:51Z dikim $

#client make the /etc/odaserver file on all oscar s

BEGIN {
    if (defined $ENV{OSCAR_HOME}) {
        unshift @INC, "$ENV{OSCAR_HOME}/lib";
    }
}

use strict;
use Carp;
use OSCAR::Logger;
use OSCAR::Opkg;
use OSCAR::OCA::OS_Settings;
use OSCAR::SystemServices;
use OSCAR::SystemServicesDefs;

my ($db_type, $chk) = split(':', $ENV{OSCAR_DB});
my $cmd;

# OL: Nothing to do if $db_type eq "mysql"
#
if ( $db_type eq "pgsql" ) {
    my $PG_DATA_DIR = OSCAR::OCA::OS_Settings::getitem("postgresql_datadir");
    my $pg_conf = "$PG_DATA_DIR/pg_hba.conf";
    my $postgresql_conf = "$PG_DATA_DIR/postgresql.conf";
    if ($chk eq "old") {
        # Start the database daemon if not started yet. OL Q: Should we enable it?
        !system_service(POSTGRESQL(),START())
            or die "ERROR: Couldn't start postgresql server.";
        # 1st, create a backup of the config file if not already done.
        backup_file_if_not_exist($pg_conf) or die "ERROR: Cannot backup $pg_conf";

        open OLD_CFG, "$pg_conf"
            or die ("ERROR: Can not open $pg_conf file");
        open NEW_CFG, ">$pg_conf.$$";

        # Clear off the previous ODA configurations if it exists
        my $config_flag = 0;
        while(chomp(my $line = <OLD_CFG>)){
            print NEW_CFG "$line\n";
            $config_flag = 1 if ($line =~ m/^host.*127.0.0.1.*trust$/);
            last if $config_flag;
        }
        close NEW_CFG;
        close OLD_CFG;

        open UPDATE_CFG, ">>$pg_conf.$$"
            or croak("ERROR: Can not open $pg_conf.$$ file");
            
        chomp(my @ip_addrs = `oda nics | grep -v List | grep -v =`);

        if ($#ip_addrs > -1) { #If @ip_addrs is not empty
            print UPDATE_CFG "# All the nodes to access oda(pgsql)\n";
            foreach my $ip (@ip_addrs) {
                print "$ip\n";
                print UPDATE_CFG "host  all  all  $ip  255.255.255.0  trust\n";
            }
            close UPDATE_CFG;
        }
        rename $pg_conf, "$pg_conf.bak";
        rename "$pg_conf.$$", $pg_conf;

        $cmd = "chmod 600 $pg_conf";
        if (system($cmd)) {
            die "ERROR: Impossible to execute $cmd";
        }
        # OL: FIXME3: Check if this is ok for all distros.
        $cmd = "chown postgres:postgres $pg_conf";
        if (system($cmd)) {
            die "ERROR: Impossible to execute $cmd";
        }
    }

    # Reload the database if it is running. Otherwise, just start it.
    if ( system_service(POSTGRESQL(),STATUS()) == STARTED() ) {
        !system_service(POSTGRESQL(),RELOAD())
            or die "ERROR: Couldn't reload postgresql server.";
        # OL: What does mean "old"?
        $chk = "old";
        $ENV{OSCAR_DB} = "$db_type:$chk";
    } else {
        oscar_log_subsection("Postgresql daemon was not running and will start");
        !system_service(POSTGRESQL(),START())
            or die "ERROR: Couldn't start postgresql server.";
    }
}


my $file = "/etc/odaserver";
OSCAR::Opkg::opkg_print "Generating the $file file on all oscar clients...\n";
$cmd = "/usr/bin/cexec \'echo oscar-server > $file\'";
OSCAR::Opkg::opkg_print "Executing: $cmd\n";
if (system( $cmd )) {
    die ("ERROR: oda server location file $file push failed.");
}

#####################################################################
#   OPIUM CONFIGURATION FOR ODA
#####################################################################

# Execute the confmgr of OPIUM to synchronize the /etc/odapw with
# client nodes.
$cmd = "/opt/sync_files/bin/confmgr --syncnow --add /etc/odapw";

if (system( $cmd )) {
    die ("ERROR: Impossible to execute $cmd.");
}

exit 0;
