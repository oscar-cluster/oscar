#!/usr/bin/perl

#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.

#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.

#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#   SIS Server Preparation script
#   Michael Chase-Salerno (mchasal@users.sf.net)
# Copyright © 2003, The Board of Trustees of the University of Illinois. All rights reserved.

use strict;
use Carp;
use lib "$ENV{OSCAR_HOME}/lib";
use POSIX;
use Carp;
use OSCAR::Distro;

!system("/etc/init.d/systemimager-server-rsyncd restart") or croak("Couldn't restart systemimager-server-rsyncd");

!system("patch --dry-run -stp0 < $ENV{OSCAR_PACKAGE_HOME}/scripts/systemimager-server-3.2.0.patch | grep -q 'Assuming -R' || patch -bp0 < $ENV{OSCAR_PACKAGE_HOME}/scripts/systemimager-server-3.2.0.patch") or croak("Couldn't patch systemimager for disk independence");

!system("patch --dry-run -stp0 < $ENV{OSCAR_PACKAGE_HOME}/scripts/systeminstaller-1.04.patch | grep -q 'Assuming -R' || patch -bp0 < $ENV{OSCAR_PACKAGE_HOME}/scripts/systeminstaller-1.04.patch") or croak("Couldn't patch systeminstaller.");

!system("patch --dry-run -stp0 < $ENV{OSCAR_PACKAGE_HOME}/scripts/systeminstaller-x11-1.04.patch | grep -q 'Assuming -R' || patch -bp0 < $ENV{OSCAR_PACKAGE_HOME}/scripts/systeminstaller-x11-1.04.patch") or croak("Couldn't patch systeminstaller-x11.");

# Quick hack to have Fedora support while this is worked out by the SIS Team
# Benoit des Ligneris, Las Vegas
# To be removed as soon as the packages become avalaible !!!!
my ($name, $ver) = OSCAR::Distro::which_distro_server();

if ($name eq "fedora") {
	print "Patching systeminstaller so that it support $name\n";
	# If there is no patch, apply it
	if (! (-f "/usr/share/systeminstaller/distinfo/Fedora/stages")) {
	my @patches = glob("$ENV{OSCAR_PACKAGE_HOME}/scripts/fedora.patch/*.patch");
	foreach my $patch (@patches) {
		print "Applying patch $patch\n";
    		!system("cd / && patch -p1 < $patch");
	}
	print "SIS patch for $name done\n";
	}
}
if ($name eq "redhat") {
	print "Patching the systeminstaller so that it support $name\n";
	if (! (-f "/usr/share/systeminstaller/distinfo/Redhat/3AS/stages")) {
	my @patches = glob("$ENV{OSCAR_PACKAGE_HOME}/scripts/redhat.patch/*.patch");
	foreach my $patch (@patches) {
		print "Applying patch $patch\n";
    		!system("cd / && patch -p1 < $patch");
	}
	print "SIS patch for $name done\n";
	}
}

# creates a script to be run in post-install after client creation which
# generates /etc/modprobe.conf if the image is to run 2.6 kernel
my $script = '/var/lib/systemimager/scripts/post-install/22all.generate_modprobe_script';

`cat << EOL > $script
#!/bin/sh
#
# Generates /etc/modprobe.conf on 2.6 kernel
#
if [ -f /sbin/generate-modprobe.conf ]; then
  /sbin/generate-modprobe.conf > /etc/modprobe.conf
fi
EOL`;
