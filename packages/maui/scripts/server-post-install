#!/usr/bin/perl
# Updates maui config file with real PBS server hostname
# 

use OSCAR::Logger;
use OSCAR::LoggerDefs;
use OSCAR::Utils;
use OSCAR::MonitoringMgt;
use OSCAR::SystemServices;
use OSCAR::SystemServicesDefs;
use OSCAR::Database;

# Avoid smartmatch warnings when using given
no if $] >= 5.017011, warnings => 'experimental::smartmatch';

# Load list of selected packages.
my @pkgs = OSCAR::Database::list_selected_packages();

# Keep in mind if naemon is selected.
my $use_naemon=1 if ( 'naemon' ~~ @pkgs );

my $maui_config="/opt/maui/maui.cfg";

my $rc = 0;

if ( -f $maui_config ) {
  my $cmd = "sed -i -e 's/pbs_oscar/".$ENV{HOSTNAME}."/g' $maui_config";
  oscar_log(2, INFO, "Maui config file updated with PBS server set to: $ENV{HOSTNAME}");
} else {
  oscar_log(1, ERROR, "Not updating Maui config file: $maui_config not found.");
  $rc++;
}

# Enable MAUI service.
!enable_system_services( MAUI )
    or ($rc++, oscar_log(1, ERROR, "Couldn't enable maui on head."));

# enable monitoring of service if naemon is part of selected packages.
if (defined($use_naemon)) {
    # 1st Create the directory structure required for oscar specific configuration. This needs to be checked as we may have been called before naemon server post install.
    init_naemon_config_dir() or (oscar_log(1,ERROR,"Failed to create naemon OSCAR's specific directory structure"), exit 1);
    # Check that MAUI server is listenning on default port 42559.
    $rc += write_oscar_command_cfg ('check_maui', '$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ -w $ARG2$ -c $ARG3$');
    $rc += write_oscar_service_cfg ('maui', 'host', 'oscar_server', 'check_maui!42559!1.0!1.5');
}
