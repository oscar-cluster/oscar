#!/usr/bin/perl

# post_server_install script for netbootmgr
#
# - turn on service systemimager-server-netbootmond
# - make it switch to local boot mode after installation

BEGIN {
    if (defined $ENV{OSCAR_HOME}) {
        unshift @INC, "$ENV{OSCAR_HOME}/lib";
    }
}

use Carp;
use strict;
use OSCAR::OCA::OS_Detect;
use OSCAR::Opkg;

my $os = OSCAR::OCA::OS_Detect::open();
my $binary_format = $os->{'pkg'};

my $service = "/etc/init.d/systemimager-server-netbootmond";
if (! -f $service) {
    # GV: not sure if we should generate an error or not here.
    # I guess it depends if the netbootmgr binary package has a dependency to
    # systemimager (for systemimager-server-netbootmond).
    OSCAR::Opkg::opkg_print ("[WARN] $service is not available");
    exit (0);
}

# chkconfig is a RPM specific command, so we do not use it on Debian-like
# systems. Moreover, services are automatically added into rc2.d on Debian
if ($binary_format ne "deb") {
    !system("chkconfig --add systemimager-server-netbootmond") or
	    croak("ERROR: Could not add service systemimager-server-netbootmond!");

    !system("chkconfig systemimager-server-netbootmond on") or
	    croak("ERROR: Could not enable systemimager-server-netbootmond service!");
}

my $config_file = "/etc/systemimager/systemimager.conf";
open IN, "$config_file" or
	croak("ERROR: Could not open $config_file for reading!");
my @sic = <IN>;
close IN;

print "Setting systemimager-server-netboodmond to NET_BOOT_DEFAULT=local\n";
open OUT, "> $config_file" or
	croak("ERROR: Could not open $config_file for writing!");
for my $line (@sic) {
    if ($line =~ m/^\s*NET_BOOT_DEFAULT\s*=/) {
        print OUT "NET_BOOT_DEFAULT = local\n";
    } else {
        print OUT $line;
    }
}
close OUT;

!system("$service restart") or
	croak("ERROR: Could not restart service systemimager-server-netbootmond!");

exit 0;

