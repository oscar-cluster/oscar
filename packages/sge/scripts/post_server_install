#!/usr/bin/perl

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# This script reads the Configurator result and sets up the configuration
# files, configures and starts up qmaster and scheduler on the OSCAR head node

# (C)opyright Bernard Li <bli@bcgsc.ca>, Babu Sundaram <babu@cs.uh.edu>

use XML::Simple;
use File::Copy;
use Carp;

my $qmasterBuffer = "";

# Default SGE-specific settings for qmaster installation 

my $sge_root = "/opt/sge";	# Root of SGE binaries installation 
my $qmaster_port = "536";	# Port where SGE Qmaster listens to
my $qmaster_spooldir = "/opt/sge/default/spool/qmaster";	# Spool directory for qmaster
my $execd_port = "537";		# Port where SGE execd listens to
my $execd_spooldir = "/opt/sge/default/spool/execd";		# Spool directory for qmaster
my $hostname_resolve = "true";	# All hosts are taken to be in same domain

my $hostname = `hostname`;
my $domainname = `domainname`;
chomp($hostname);
chomp($domainname);

# Set the location for the config file with default settings 
# that will guide the auto-install of qmaster and execd
#my $templateFile = "/opt/sge/util/install_modules/inst_template.conf";
my $templateFile = "/opt/sge/util/install_modules/my_configuration.conf";
my $qmaster_conf = "/opt/sge/myInstall.conf";
copy($templateFile, $qmaster_conf) or croak("Error during copying install template file");

# Obtain any custom configure values from the users
my $xml_data = "$ENV{OSCAR_PACKAGE_HOME}/.configurator.values";

# default settings if user does not configure the package
my $fullserver_default = "true";	# Indicates if the OSCAR server with qmaster is an exec host too
my $cellname_default = "default";	# Should suffice for a single installation of SGE
my $gidrange_default = "20000-20100"; 	# Allowing for upto 100 concurrently executing jobs
my $spooltype_default = "classic";    	# Other option would be to use berkeleydb

# need to modify qmaster config file that drives the automated master installation
open(CONF, $qmaster_conf) or croak("Error: unable to open ($qmaster_conf)\n");

while ($line = <CONF>) {
    $qmasterBuffer = $qmasterBuffer.$line;
}

close(CONF, $qmaster_conf);

$qmaster_conf = ">".$qmaster_conf;


if (-e $xml_data) {
    $ref = XMLin($xml_data);
} else {
    $ref->{fullserver} = $fullserver_default;
    $ref->{cellname} = $cellname_default;
    $ref->{gidrange} = $gidrange_default;
    $ref->{spooltype} = $spooltype_default;
}
    
#$qmasterBuffer =~ s/SGE_ROOT="Please enter path"/SGE_ROOT="\/opt\/sge"/;
$qmasterBuffer =~ s/gridengine/sge/g;
#$qmasterBuffer =~ s/SGE_QMASTER_PORT="Please enter port"/SGE_QMASTER_PORT="536"/;
#$qmasterBuffer =~ s/SGE_EXECD_PORT="Please enter port"/SGE_EXECD_PORT="537"/;
$qmasterBuffer =~ s/ADMIN_USER=""/ADMIN_USER="sge"/;
#$qmasterBuffer =~ s/Please, enter spooldir/\/opt\/sge\/default\/spool\/qmaster/;
#$qmasterBuffer =~ s/EXECD_SPOOL_DIR="Please, enter spooldir"/EXECD_SPOOL_DIR="\/opt\/sge\/default\/spool"/;
$qmasterBuffer =~ s/EXECD_SPOOL_DIR_LOCAL="Please, enter spooldir"/EXECD_SPOOL_DIR_LOCAL=""/;
#$qmasterBuffer =~ s/Please, enter GID range/$ref->{gidrange}/;
$qmasterBuffer =~ s/20000-20100/$ref->{gidrange}/;
#$qmasterBuffer =~ s/"berkeleydb"/"classic"/;
#$qmasterBuffer =~ s/ADMIN_HOST_LIST="host1 host2 host3 host4"/ADMIN_HOST_LIST=""/;
#$qmasterBuffer =~ s/SUBMIT_HOST_LIST="host1 host2 host3 host4"/SUBMIT_HOST_LIST=""/;
#$qmasterBuffer =~ s/EXEC_HOST_LIST="host1 host2 host3 host4"/EXEC_HOST_LIST=""/;
$qmasterBuffer =~ s/DEFAULT_DOMAIN="none"/DEFAULT_DOMAIN="$domainname"/;
#$qmasterBuffer =~ s/ADD_TO_RC="false"/ADD_TO_RC="true"/;
#$qmasterBuffer =~ s/SHADOW_HOST="hostname"/SHADOW_HOST=""/;

open(CONF, $qmaster_conf) or croak("Error: unable to open ($qmaster_conf)\n");
    
print CONF $qmasterBuffer;    
    
close(CONF);

print("SGE configuration options are set, proceeding with installation...\n");

# Setup the qmaster and optionally, the execd (if so chosen by the user)
# Note: In this version, we completely eliminate the option of master 
# being an exec node no matter what the user specifies in the configurator, 
# only qmaster is installed on the OSCAR cluster head node

$ENV{'SGE_ROOT'} = '/opt/sge';
chdir("/opt/sge");
system("./inst_sge -m -auto ./myInstall.conf"); 

if ($? == -1) {
        # Something seriously wrong; qmaster installation failed
	croak("Program failed: While doing ./inst_sge -x on OSCAR head");
}
elsif($? == 0){
	# Everything OK; qmaster installation success
	printf "inst_sge system function SUCCESS\n";
}
elsif ($? & 127) {
	printf "child died with signal %d, %s coredump\n",
	    ($? & 127),  ($? & 128) ? 'with' : 'without';
}
else {
	# No problem here; Mostly, a rerun of inst_sge (i.e., OSCAR's post_server_install)
	printf "Looks like inst_sge is getting repeated (return = %d) : No harm done, SUCCESS\n", $? >> 8;
}

# For now, I am avoiding from making the head node as an exec host
# system("/opt/sge/inst_sge -x");
# wait();

# Also, we make the head node as an admin host and a submit host as well
# This will make a clean separation of activities that can be done on master
# and exec hosts. That is, Master = admin + submit and all others are exec

system("/opt/sge/bin/lx26-x86/qconf -as $hostname") == 0 or croak("Error: Problem with adding OSCAR head as sge admin host");

# Copy the scripts that setup the environment so that its system-wide
# All users logging in from now on will have the setup automated 
# and can start using the SGE commands right away.

copy("/opt/sge/default/common/settings.sh","/etc/profile.d/sge.sh") or croak("Error during copying setting.sh to /etc/profile.d");
copy("/opt/sge/default/common/settings.csh","/etc/profile.d/sge.csh") or croak("Error during copying setting.sh to /etc/profile.d");

# The following cannot happen since we decided not make headnode as exec
# But, we can uncomment this when we allow headnode as exec
#system("/opt/sge/bin/lx26-x86/qconf -ae $hostname");

# Also, to set environments correctly for non-interactive shells we can 
# add the SGE_ROOT variable to the contents of bashrc in /etc
my $bashrc_conf = ">> /etc/bashrc";

open(BASHRC, $bashrc_conf) or croak("Error: unable to open ($bashrc_conf)\n");

print BASHRC "export SGE_ROOT=/opt/sge\n";
print BASHRC "export PATH=/opt/sge/bin/lx26-x86:\$PATH\n";
print BASHRC "export LD_LIBRARY_PATH=/opt/sge/lib/lx26-x86:\$LD_LIBRARY_PATH\n";
print BASHRC "export MANPATH=/opt/sge/man/:\$MANPATH\n";

close BASHRC;
                                                                                                                             
print("All qmaster-related setup complete.\n");
