#!/usr/bin/env perl
                                                                                
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# Copyright (C) 2005-2006 Bernard Li <bli@bcgsc.ca>
#               All rights reserved

# This script sets the ntp server for the client nodes (via the image in the
# chroot environment) to be the OSCAR headnode signified by the alias
# oscar_server

use Carp;
use OSCAR::SystemServices;
use OSCAR::SystemServicesDefs;
use OSCAR::OCA::OS_Settings;

#Â OL: Moved /etc/ntp.conf configuration to api-post-image. (more easy to run non chrooted)
# SUSE Linux's xntp package does not create /etc/ntp, create it here
# !system("mkdir $ntp_dir") or croak("Failed to mkdir $ntp_dir") if !(-d $ntp_dir);
# 
# open(CONF, $ntp_conf) or croak("Error: unable to open ($ntp_conf)\n");
#
# while ($line = <CONF>) {
#     $ntpBuffer = $ntpBuffer.$line;
# }
#                                                                                
# close(CONF, $ntp_conf);
#
#
# $ntpBuffer = "# Added by OSCAR package ntpconfig\nserver  $ntpserver\nrestrict $ntpserver mask 255.255.255.255\n\n".$ntpBuffer;
#
# $ntpBuffer =~ s/^authenticate/# authenticate/m;
#
# $ntp_conf = ">".$ntp_conf;
# open(CONF, $ntp_conf) or croak("Error: unable to open ($ntp_conf)\n");
# print CONF $ntpBuffer;
# close(CONF);
#
# populate the step-tickers file with ntp server specified
# $step_tickers = ">".$step_tickers;
# open(STEP, $step_tickers) or croak("Error: unable to open ($step_tickers)\n");
#
# print STEP $ntpserver;
# close (STEP);

# Enable ntp service
print("[INFO] enabling ntp service at boot time in image\n");
!enable_system_services( (NTP) )
    or (carp "ERROR: Couldn't enable ntp service.\n", exit 1);

exit(0);
