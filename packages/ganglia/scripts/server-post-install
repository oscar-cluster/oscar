#!/usr/bin/perl

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# This script modifies the server's gmond.conf according to the configurator 
# values.

# Copyright Erich Focht 2005
# Copyright (c) 2008    Oak Ridge National Laboratory
#                       Geoffroy Vallee <valleegr@ornl.gov>
#                       All rights reserved.
#Â Copyright (c) 2013    Olivier Lahaye <olivier.lahaye@cea.fr>
#$Id$

BEGIN {
    if (defined $ENV{OSCAR_HOME}) {
        unshift @INC, "$ENV{OSCAR_HOME}/lib";
    }
}

use strict;
use warnings "all";
use OSCAR::Package;
use OSCAR::SystemServices;
use OSCAR::SystemServicesDefs;
use OSCAR::Logger;
use OSCAR::LoggerDefs;
use OSCAR::Utils;
use OSCAR::Configurator_backend;
use OSCAR::MonitoringMgt;

# Note that we do not care if "stop" does not work, we just want to be sure the service is stopped.
system_service(GANGLIA_GMOND,STOP);

my $ganglia_scripts_dir = OSCAR::Package::get_scripts_dir("ganglia", "server-post-install");

my $cmd = "$ganglia_scripts_dir/edit_ganglia_conf --gmond --verbose";
if (oscar_system($cmd)) {
    exit 1;
}

$cmd = "$ganglia_scripts_dir/edit_ganglia_conf --gmetad --verbose";
if (oscar_system($cmd)) {
    exit 1;
}

# NAEMON specific part: Add monitoring to ganglia if naemon is used.

my $naemon_scripts_dir = OSCAR::Package::get_scripts_dir("naemon", 'server-post-install');
my $naemon_configurator = "$naemon_scripts_dir/configurator.html";

my $naemon_config_ref = OSCAR::Configurator_backend::readInConfigValues($naemon_configurator, "naemon", "", noarray=>1);
my $errors = 0;
if (defined ($naemon_config_ref)) { # If defined, it means that naemon is configured. (we don't care for values)
    # Check that ganglia web interface is working on oscar_server.
    $errors += write_oscar_service_cfg ('HTTP-ganglia', 'host', 'oscar_server', 'check_http!-u/ganglia');

    # Get ganglia gmond port configuration.
    my $gmond_port = 8649;
    my $gmetad_port = 8651; # or 8652.
    my $ganglia_configurator = "$ganglia_scripts_dir/configurator.html";
    my $ganglia_config_ref = OSCAR::Configurator_backend::readInConfigValues($ganglia_configurator, "ganglia", "", noarray=>1);
    $gmond_port = $ganglia_config_ref->{udp_send_channel__port} if (defined ($ganglia_config_ref->{udp_send_channel__port}));

    # Check that gmetad in listenning on  the head node.
    $errors += write_oscar_service_cfg ('gmetad', 'host', 'oscar_server', "check_tcp!$gmetad_port -w 1.0 -c 1.5");

    # Check that gmond is listenning on oscar computers (head + nodes).
    $errors += write_oscar_service_cfg ('gmond', 'hostgroup', 'oscar_computers', "check_tcp!$gmond_port -w 1.0 -c 1.5");
}

exit $errors;
