#!/usr/bin/perl
#

#########################################################################
#  Script Name : post_rpm_nochroot
#  Written by  : Erich Focht
#  Date        : November 24, 2003
#  Purpose     : This post_install script configures gmond for the
#                nodes of a particular image.
#  Copyright (c) Erich Focht 2003-2005
#                All rights reserved.
#  Copyright (c) Oak Ridge National Laboratory
#                Geoffroy Vallee <valleegr@ornl.gov>
#                All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#########################################################################
# $Id$
#########################################################################

BEGIN {
    if (defined $ENV{OSCAR_HOME}) {
        unshift @INC, "$ENV{OSCAR_HOME}/lib";
    }
}

use strict;
use Carp;
use POSIX;
use XML::Simple;
use Tk;
use OSCAR::Configbox;
use OSCAR::Configurator_backend;
use OSCAR::Database;
use OSCAR::Package;
use OSCAR::Logger;
use OSCAR::LoggerDefs;
use OSCAR::Utils;
use SIS::DB;
use SIS::Image;

my $pkgdir = OSCAR::Package::get_scripts_dir("ganglia", "post-install");
my $configdir = "$pkgdir/.configs";

my $imagedir = shift @ARGV;
$imagedir =~ s/\/$//;
my $image = $imagedir;
$image =~ s:^.*/::g;

my $window;

#####################
# BEGIN MAIN SCRIPT #
#####################

my $imageconf = "$configdir/$image";
my $masterconf = "$pkgdir/configurator.html";

my $master_conf;
if (-e $masterconf) {
    $master_conf = OSCAR::Configurator_backend::readInConfigValues($masterconf,
                                                                   "ganglia",
                                                                   "",
                                                                   noarray=>1);
    # if no per-image config : edit image with global settings
    if ($master_conf->{gmond_per_image} ne "YES") {
        goto run_image_conf;
    }
} else {
    # default values, so no per-image config!
    exit 0;
}

if (! -d $configdir) {
    !oscar_system("mkdir ".$configdir) || do {
        exit 1;
    };
}

my $i = list_image(name=>$image);
if (!$i) {
    carp "ERROR: Could not find image $image!";
    exit 1;
}

oscar_log(5, INFO, "configuring gmond for image=$image");

if (! -d $imageconf) {
    !oscar_system("mkdir ".$imageconf) || do {
        exit 1;
    };
    if (! -e $imageconf."/configurator.html") {
	!oscar_system("sed -e \"s/\@IMAGENAME\@/$image/\" ".
		"< $pkgdir/configurator_image.html ".
		"> $imageconf/configurator.html") or
		(oscar_log(5, ERROR,"Could not create $imageconf/configurator.html! $!"), exit 1);
    }
} else {
    oscar_log(5, INFO, "Found $imageconf");
}

# configure this only if no config values found in database
my @res = OSCAR::Database::get_pkgconfig_vars(opkg => "ganglia",
                                              context => "image:$image");
if (!@res) {
    if ($ENV{OSCAR_UI} eq "gui") {
        OSCAR::Configbox::configurePackage(0,
                                           $imageconf,
                                           "ganglia",
                                           "image:$image");
        MainLoop();
    } elsif ($ENV{OSCAR_UI} eq "cli") {
        require OSCAR::ConfigFile;
        my $binaries_path = OSCAR::ConfigFile::get_value (
            "/etc/oscar/oscar.conf",
            undef,
            "OSCAR_SCRIPTS_PATH");
        system("$binaries_path/configurator_cli",
		"--path=$imageconf/configurator.html",
		"--package=ganglia",
		"--context=image:$image");
	} else {
        oscar_log(5, ERROR, "OSCAR_UI not set to gui or cli");
        exit 1;
	}
}

#
# do the gmond configuration according to the values file
#
run_image_conf:
exec "$pkgdir/edit_ganglia_conf --gmond --image $image --verbose"
    or (oscar_log(5, ERROR, "Could not run edit_ganglia_conf! $!"), exit 1);

exit 0;
