#!/usr/bin/env perl

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# This script modifies the server's gmond.conf if necessary and then pushes 
# it to the compute nodes and restart the ganglia daemons

# (C)opyright Bernard Li <bli@bcgsc.ca>

use lib "$ENV{OSCAR_HOME}/lib";
use OSCAR::Database;
use Carp;
use XML::Simple;

my $gmond_conf = '/tmp/gmond.conf';
my $confBuffer = "";

# not useful currently, may be useful when define client supports changing of
# default interface via the GUI, as per RFE #791658
#my @result = split(/ = /,`grep 'DEVICE = eth' /var/lib/systemimager/scripts/*.master`);
#my $iface = $result[1];

my $xml_data = "$ENV{OSCAR_PACKAGE_HOME}/.configurator.values";

# default interface for client nodes if package is not configured
my $iface = "eth0";

my $push_command = "/opt/c3-4/cpush";
my $exec_command = "/opt/c3-4/cexec";

if (-e $xml_data) {
    $ref = XMLin($xml_data);
    $iface = $ref->{iface};
}

# get interface of headnode
my @results = ();
get_nics_info_with_node("oscar_server", \@results);
my $ref = pop @results;
my $headnode_iface = $$ref{name};

if ( $headnode_iface eq $iface ) {
    print("Pushing headnode's gmond.conf to compute nodes\n");
    system("$push_command /etc/gmond.conf /etc/gmond.conf");
} else {
    system("cp /etc/gmond.conf $gmond_conf");
    
    open(CONF, $gmond_conf) or croak("Error: unable to open ($gmond_conf)\n");
    
    while ($line = <CONF>) {
	$confBuffer = $confBuffer.$line;
    }
    
    close(CONF, $gmond_conf);
    
    $confBuffer =~ s/mcast_if = eth[0-9]/mcast_if = $iface/g;
    
    open(CONF, '>'.$gmond_conf) or croak("Error: unable to open ($gmond_conf)\n");
    
    print CONF $confBuffer;
    
    close(CONF);
    
    print("Pushing modified gmond.conf to compute nodes\n");
    system("$push_command $gmond_conf /etc/gmond.conf");
    
    system("rm $gmond_conf");
}

# stop all running daemons and restart them all (on headnode and clients)
system("/etc/init.d/gmond stop");
system("/etc/init.d/gmetad stop");
system("$exec_command /etc/init.d/gmond stop");
system("/etc/init.d/gmond start");
system("$exec_command /etc/init.d/gmond start");
system("/etc/init.d/gmetad start");
