#!/usr/bin/perl -w
# $Id$
#
# Copyright (c) 2007 Geoffroy Vallee <valleegr@ornl.gov>
#                    Oak Ridge National Laboratory.
#                    All rights reserved.
#
#

use lib "$ENV{OSCAR_HOME}/lib";
use Carp;

my $unit_testing_dir = $ENV{OSCAR_HOME} . "/testing/unit_testing";

print "Testing few OSCAR stuff in $unit_testing_dir...\n";

if (! -d $unit_testing_dir ) {
	croak "Error: Missing unit_testing/ directory - \'$unit_testing_dir\'"; 
}

my @files = get_files( $unit_testing_dir );

my $failure_flag = 0;

foreach my $file (@files) {
	my $script = $unit_testing_dir . "/" . $file;

	if (! -x $script) {
		die ("not executable \'$file\'"); 

	} else {
        print "Executing: $script\n";
		my $rc = system($script);
        print "Result: $rc\n";
 		$failure_flag++ if ($rc != 0);
	}
}

# Return: failures (1) / warnings (2) / no failures/warnings (0) / 
if ($failure_flag) {
    exit (1);
} else {
    exit (0);
}


#  Descr: read all system-sanity check file(s) from provided directory
# Return: list of system-sanity check filenames 
#
#   NOTE: Not fully qualify path in returned file list so caller can 
#         easily get at check filenames. 
#
sub get_files 
{
	my $dir = shift;

	opendir(DIR, "$dir") or die "Error: $! - \'$dir\'";

	 # RegEx: ignore all files starting with a dot, 
	 #        e.g., ".", "..", ".foobar"
	my @files = grep { !/^\./ } readdir(DIR);

	closedir(DIR);

	return(@files);
}


# vim:tabstop=4:shiftwidth=4:syntax=perl:textwidth=76
