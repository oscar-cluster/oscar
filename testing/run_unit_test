#!/usr/bin/perl -w
# $Id: run_unit_test 7035 2008-06-17 02:31:41Z valleegr $
#
# Copyright (c) 2007 Geoffroy Vallee <valleegr@ornl.gov>
#                    Oak Ridge National Laboratory.
#                    All rights reserved.
#
#

BEGIN {
    if (defined $ENV{OSCAR_HOME}) {
        unshift @INC, "$ENV{OSCAR_HOME}/lib";
    }
}

use strict;
use OSCAR::FileUtils;
use OSCAR::Utils;
use Carp;
use warnings "all";

my $unit_testing_dir;
if (defined $ENV{OSCAR_HOME}) {
    $unit_testing_dir = $ENV{OSCAR_HOME} . "/testing/unit_testing";
} else {
    $unit_testing_dir = "/usr/share/oscar/testing/unit_testing";
}

print "Testing few OSCAR stuff in $unit_testing_dir...\n";

if (! -d $unit_testing_dir ) {
	croak "Error: Missing unit_testing/ directory - \'$unit_testing_dir\'"; 
}

my @files = OSCAR::FileUtils::get_files_in_path ( $unit_testing_dir );

my $failure_flag = 0;
my @failed_tests;

foreach my $file (@files) {
	my $script = $unit_testing_dir . "/" . $file;

	if (! -x $script) {
		die ("not executable \'$file\'"); 

	} else {
        print "Executing: $script\n";
		my $rc = system($script);
        print "Result: $rc\n";
 		$failure_flag++ if ($rc != 0);
        push (@failed_tests, $script) if ($rc != 0);
	}
}

print "\n\n[UNIT TESTS]: $failure_flag failures during execution\n\n";
if ($failure_flag > 0) {
    print "Failed tests: ";
    OSCAR::Utils::print_array (@failed_tests);
}

# Return: failures (1) / warnings (2) / no failures/warnings (0) / 
if ($failure_flag) {
    exit (1);
} else {
    exit (0);
}

# vim:tabstop=4:shiftwidth=4:syntax=perl:textwidth=76
