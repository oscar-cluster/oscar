# Experimental Dockerfile to build OSCAR from scratch on CentOS-6
# Build using the following command:
#       sudo docker build -t oscar/unstable:1.0 -f Dockerfile_OSCAR.centos6 .


FROM centos:6

LABEL maintainer="Olivier LAHAYE <olivier.lahaye@cea.fr>"
LABEL version="6.5"
LABEL vendor="OSCAR Cluster"
LABEL license="GPLv2"

# Install basic build requirements
RUN yum -y install http://fr2.rpmfind.net/linux/epel/6/x86_64/epel-release-6-8.noarch.rpm
RUN yum -y install git-core

# Update distro
RUN yum -y update

# Prepare rpm build environment
RUN yum -y install rpm-build wget make subversion createrepo which
RUN mkdir -p /root/rpmbuild/{SOURCES,SRPMS,RPMS,SPECS}

# Fix needed for yume
#RUN mkdir /var/run/lock

# Install OSCAR Perl requirements
RUN yum -y install      'perl(AppConfig)' 'perl(Carp)' 'perl(Cwd)' 'perl(Data::Dumper)' 'perl(English)' \
                        'perl(Exporter)' \
                        'perl(File::Copy::Recursive)' 'perl(File::Copy)' 'perl(File::Basename)' 'perl(File::Path)' \
                        'perl(Getopt::Long)' 'perl(POSIX)' 'perl(Exporter)' 'perl(ExtUtils::MakeMaker)' \
                        'perl(Tk)' 'perl(DBI)' 'perl(DBD::mysql)' 'perl(XML::Simple)' \
                        perl-Module-Build perl-devel 'perl(Tk)' 'perl(Test::More)'

# Install requirements and build it
RUN yum -y install gcc syslinux

# Install comfort tools
RUN yum -y install vim openssh-clients

# Build and install Tk-TextANSIColor
RUN cd /tmp && wget http://svn.oscar.openclustergroup.org/pkgs/downloads/Tk-TextANSIColor-0.16.tar.gz
RUN cd /tmp && tar xvfz Tk-TextANSIColor-0.16.tar.gz
RUN cd /tmp/Tk-TextANSIColor-0.16 && perl Build.PL --installdirs vendor && perl Build && perl Build install --installdirs vendor

# Step 16/47: Get OSCAR source tree
RUN cd /root && git clone --depth=1 https://github.com/oscar-cluster/oscar.git

# Build oscar base and install it
RUN cd /root/oscar && make source_tarball && rpmbuild -tb /root/oscar/tmp/oscar-6.1.3.tar.gz

# Install opkgc build requirements and build it
RUN yum -y install python-devel python-cheetah python-lxml xmlto autoconf automake rsync
RUN cd /root && git clone --depth=1 https://github.com/oscar-cluster/oscar-opkgc.git
RUN cd /root/oscar-opkgc && ./autogen.sh && ./configure --prefix=/usr && make install

# Install oda and configure it to use mysql (needed by oscar-config)
RUN cd /root && git clone --depth=1 https://github.com/oscar-cluster/oscar-oda.git
RUN cd /root/oscar-oda && make install DESTDIR=/
RUN cd /usr/share/perl5/vendor_perl/OSCAR && ln -s ODA/mysql.pm oda.pm

# Reinstall oscar rpm packages.
RUN rpm -Uvh --nodeps /root/rpmbuild/RPMS/noarch/oscar-*rpm

# Install default config file for OSCAR so oscar-packager will be happy..
RUN cp /root/oscar/share/etc/templates/oscar.conf /etc/oscar/oscar.conf

# Install oscar-config requirements.
# Configure OSCAR (Creates /tftpboot/distro/<distro>.url and /tftpboot/oscar/<distro>.url)
RUN oscar-config --setup-distro centos-6-x86_64

# Install packman
RUN cd /root && git clone --depth=1 https://github.com/oscar-cluster/oscar-packman.git
RUN cd /root/oscar-packman && make install DESTDIR=/

# Install yume
RUN cd /root && git clone --depth=1 https://github.com/oscar-cluster/oscar-yume.git
RUN cd /root/oscar-yume && make install DESTDIR=/

# Install oscar-packager requirements
RUN cd /root && git clone --depth=1 https://github.com/oscar-cluster/oscar-packager.git
RUN cd /root/oscar-packager && make rpm
RUN rpm -Uvh --nodeps /root/rpmbuild/RPMS/noarch/oscar-packager*.rpm

# Install OSCAR repo
#RUN yum -y --skip-broken install /root/rpmbuild/RPMS/noarch/oscar-release*rpm

# REBUILD oscar essential rpms.
RUN oscar-packager --all Tk-TextANSIColor
RUN oscar-packager --all oscar
RUN oscar-packager --all packman
RUN oscar-packager --all yume
RUN oscar-packager --all opkgc
RUN oscar-packager --all oscar-packager
RUN oscar-packager --all systemconfigurator
RUN oscar-packager --all systemimager
RUN oscar-packager --all oda
RUN oscar-packager --all orm
RUN oscar-packager --all apitest
RUN oscar-packager --all systeminstaller-oscar

# Cleanup build stuffs to make room in the image
RUN /bin/rm -rf /root/rpmbuild/*/*

# Now we add the repo so failed build are available anyway. In a normal situation,
# this should not be required
RUN rpm -q oscar-release > /dev/null || yume -y install /tftpboot/oscar/*/oscar-release*rpm
RUN yume clean all
RUN touch /tftpboot/oscar/*/.olddata &&/bin/rm -rf /tftpboot/oscar/*/.olddata && yume --prepare
RUN yume -y reinstall oscar-release

# Now install as rpm what has been installed by hand before as bootstrap.
RUN yume -y install yume packman opkgc


# now we reinstall core packages and oscar-packager (already installed from build dep requirements. Make sure we use latest version)
RUN yume -y reinstall oscar oscar-base oscar-base-client oscar-base-lib oscar-base-scripts oscar-base-server oscar-devel oscar-utils oscar-packager

# Renstall systemimager server parts that have already been installed from oscar deps.
RUN yume -y reinstall systemimager-x86_64initrd_template systemimager-x86_64boot-standard systemimager-server systemimager-common

# Install bittorrent that is needed for systemimager-bittorrent
#RUN yume -y install bittorrent bittorrent-gui
# Install systemimager missing bits.
RUN yume -y install systemimager-bittorrent systemimager-client systemimager-flamethrower

# Cleanup image
# RUN /bin/rm -rf /root/rpmbuild/*/*

CMD [ "bash" ]
